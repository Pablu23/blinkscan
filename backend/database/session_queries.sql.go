// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: session_queries.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const createSession = `-- name: CreateSession :one
insert into session (
  account_id
) values (
  $1
)
RETURNING id, account_id, created
`

func (q *Queries) CreateSession(ctx context.Context, accountID uuid.UUID) (Session, error) {
	row := q.db.QueryRow(ctx, createSession, accountID)
	var i Session
	err := row.Scan(&i.ID, &i.AccountID, &i.Created)
	return i, err
}

const getUserForSession = `-- name: GetUserForSession :one
select a.id, a.name, a.base64_pwd_hash, a.base64_pwd_salt from account as a
join session as s on a.id = s.account_id
where s.id = $1
`

func (q *Queries) GetUserForSession(ctx context.Context, id uuid.UUID) (Account, error) {
	row := q.db.QueryRow(ctx, getUserForSession, id)
	var i Account
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Base64PwdHash,
		&i.Base64PwdSalt,
	)
	return i, err
}
